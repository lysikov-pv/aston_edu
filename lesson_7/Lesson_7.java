package lesson_7;

public class Lesson_7 {
    public static void main(String[] args) {
        /**
         * Задание 1:
         * Создать классы Собака и Кот с наследованием от класса Животное.
         * Все животные могут бежать и плыть. В качестве параметра каждому методу передается длина препятствия.
         * Результатом выполнения действия будет печать в консоль. (Например, dogBobik.run(150); -> 'Бобик пробежал
         * 150 м.');
         * У каждого животного есть ограничения на действия (бег: кот 200 м., собака 500 м.; плавание: кот не умеет
         * плавать, собака 10 м.).
         * Добавить подсчет созданных котов, собак и животных.
         */
        Dog dogBobik = new Dog("Бобик");
        dogBobik.run(150);
        dogBobik.swim(20);

        Cat catBarsik = new Cat("Барсик");
        catBarsik.run(350);
        catBarsik.swim(20);

        Cat catPushok = new Cat("Пушок");

        Animal.printQuantity();
        Dog.printQuantity();
        Cat.printQuantity();

        /**
         * Расширить задачу, добавив для котов возможность кушать из миски, выполнив следующие пункты: Сделать так,
         * чтобы в миске с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот
         * пытается покушать 15-20). Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если
         * коту удалось покушать (хватило еды), сытость = true. Считаем, что если коту мало еды в миске, то он её
         * просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
         * Создать массив котов и миску с едой, попросить всех котов покушать из этой миски и потом вывести информацию
         * о сытости котов в консоль. Добавить метод, с помощью которого можно было бы добавлять еду в миску.
         */
        Cat[] cats = new Cat[3];
        cats[0] = new Cat("Мурзик");
        cats[1] = new Cat("Черныш", 15);
        cats[2] = new Cat("Жорик", 50);

        Bowl catsBowl = new Bowl(70);
        for (Cat cat: cats) {
            cat.eat(catsBowl);
            cat.printWellfed();
        }
        /**
         * Задание 2:
         *
         * Применяя интерфейсы написать программу расчета периметра и площади геометрических фигур: круг, прямоугольник,
         * треугольник. Задать для каждой фигуры цвет заливки и цвет границы. Результат полученных характеристик
         * [ Периметр, площадь, цвет фона, цвет границ ] по каждой фигуре вывести в консоль.
         * Попробуйте реализовать базовые методы, такие как расчет периметра фигур, в качестве дефолтных методов в
         * интерфейсе.
         */
        Circle circle = new Circle(3F,"Нет","Белый");
        circle.info();
        Triangle triangle = new Triangle(1F, 2F,1.5F,"Красный","Желтый");
        triangle.info();
        Rectangle rectangle = new Rectangle(3F, 2F,"Синий","Зеленый");
        rectangle.info();
    }
}